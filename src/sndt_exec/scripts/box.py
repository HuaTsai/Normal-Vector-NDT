# %%
import matplotlib
import matplotlib.pyplot as plt
from statistics import median, mean, stdev
%matplotlib inline

# %%

def quartile(data):
    data.sort()
    half_list = int(len(data)//2)
    upper_quartile = median(data[half_list:])
    lower_quartile = median(data[:half_list])
    print("Lower Quartile: " + str(lower_quartile))
    print("Upper Quartile: " + str(upper_quartile))
    print("Interquartile Range: " + str(upper_quartile-lower_quartile))


a = [3.82916, 2.67015, 75.505, 1.22761, 7.33101, 4.86585e-06, 79.8016, 10.1914, 4.94827, 1140.13, 10.6152, 0.0236956, 9.13175, 206.587, 0.1765, 9.61222, 313.369, 0.00357851, 0.0946753, 316.952, 0.000457865, 3.77419, 314.388, 0.000155882, 0.00211205, 0.544491, 1.46663, 43.3001, 898.419, 0.885418, 1.99054, 1.42917, 0.680141, 0.686152, 1.60074, 0.410971, 39.2211, 0.0426006, 2.39628, 0.325485, 2.13532, 6.40443, 5.85644, 0.204305, 0.000875409, 0.000363186, 3.13734, 0.0375174, 0.0914939, 4.58389, 6.8306, 1.25841, 1.37242, 4.4223, 6.64404, 6.63083, 49.0753, 0.282829, 2.01923, 2.33827, 1.49659, 0.850005, 0.0357456, 0.0399906, 0.0191613, 13.8858, 0.810795, 30.0292, 0.331781, 61.5109, 2.41542, 0.807001, 0.0561592, 0.105418, 1.29257, 7.40852, 0.0192114, 2398.48, 12.7807, 2.39809, 3.08074, 3.49241, 6.21147, 2.38934, 8.39798, 53.1407, 47.2832, 44.1681, 0.0689233, 5.6117, 2.4273, 2.29658, 2.32119, 2.68105, 2.15806, 15.313, 6.56957, 0.0504922, 2.08456, 1.13525, 0.407915, 8.27659, 6.80266, 10.6684, 0.0841388, 2.53046, 2.88826, 44.1679, 3.69851, 24.0225, 6.53287, 1.02903, 2.10839, 2.41957, 6.26428, 0.0112852, 2.95544, 22.9288, 2.11635, 5.38435, 0.254281, 5.35868, 2.48522, 498.557, 0.468934, 0.598761, 0.776844, 1.53737, 0.0290158, 1.80812, 0.0361232, 3.14362, 10.895, 0.49462, 0.956058, 6.6924, 295.068, 1.31243, 3.3677, 2.31509, 613.917, 337.659, 1.32323, 4.1844, 6.5852, 79.3537, 1.89382, 153.859, 0.000345856, 112.606, 0.131442, 52.9513, 1.78892, 8.87446, 2.593, 198.277, 2.92512, 1.14787, 93.0839, 14.6545, 2.77425, 1.08148, 0.0454103, 2.57684, 1.93319, 0.0182955, 189.539, 1.98543, 0.0108722, 22.6149, 2.21603, 3.96034, 0.56337, 0.0401104, 0.362738, 2.90435, 0.557322, 4.0012, 1.90941, 0.146711, 6.42738, 0.979899, 41.7899, 1.5103, 0.1737, 0.494739, 13.2449, 0.418315, 6.66202, 4.38997, 0.259126, 0.763839, 0.0876665, 0.549283, 0.0449313, 29.5631, 0.119659, 0.188, 1.12905, 0.392553, 0.430388, 0.348316, 2.45494, 8.90196, 31.8669, 0.760218, 1.22251, 0.721579, 7.89535, 3.8832, 67.5887, 3.90392, 0.292662, 118.928, 2.6404, 1.07092, 1.05107, 110.789, 391.571, 0.0642765, 20.348, 7.03761, 0.244747, 3.0557, 1.26389, 0.0205859, 4.95083, 2.93248,
     4.26118, 0.0357399, 0.341422, 0.41043, 4.19015, 0.804742, 0.711035, 4.88173, 2.31555, 53.6747, 0.938131, 5.41224, 0.602914, 8.38969, 0.00106784, 4.54717e-07, 0.358379, 0.471885, 0.499347, 231.755, 0.206563, 59.4737, 4.00791, 0.75651, 0.334981, 5.80535, 0.674731, 0.0752332, 2.87567, 1.33117, 0.158866, 2.77986, 14.5376, 3.12746, 0.489528, 47.576, 0.534993, 7.09024, 42.1005, 4.834, 74.1196, 22.0029, 12.3439, 2.24205, 0.0471817, 46.2384, 19.1148, 20.7847, 6.89183, 0.146241, 20.7739, 0.0694741, 2.36517, 0.867743, 2.79859, 1.82876, 2.65211, 0.560862, 18.4809, 0.913787, 1.19606, 0.228492, 0.00194334, 0.0201228, 1.48466, 49.2307, 6.9622, 0.0873327, 1.53311, 0.319416, 0.499247, 1.5485, 2.21028, 16.2375, 0.0506242, 4.37371, 0.463674, 0.000642861, 0.10646, 0.698437, 0.155291, 1306.02, 2.96067, 960.431, 1027.66, 1014.65, 406.086, 295.942, 85.1334, 41.5686, 219.926, 24.4216, 114.399, 114.128, 0.479939, 104.983, 0.183994, 33.602, 159.685, 0.0104085, 5.86305, 175.841, 43.9969, 11.5042, 34.2575, 0.151219, 1.68882, 0.172868, 3.54795, 0.128981, 4.22326, 0.551107, 3.65498, 1.71691, 0.980194, 0.342625, 8.6695, 1.35737, 0.0759323, 0.0343196, 19.8104, 0.227468, 1.83555, 0.0762957, 0.165929, 0.0585949, 0.602164, 9.25287, 5.3896, 0.0116554, 0.226856, 0.640864, 0.487754, 661.082, 1.34695, 3.95556, 227.862, 31.5416, 109.84, 82.7433, 0.02509, 2.30073, 0.0467251, 0.0687847, 0.157469, 0.382511, 1.31576, 5.57081, 0.508997, 6.98398, 5.3397, 11.8474, 136.09, 57.0197, 4.73673, 1.36147, 4.73634, 2.57984, 4.1824, 20.1651, 0.932534, 0.281864, 0.0991986, 326.249, 19.4998, 18.3684, 0.0328535, 0.661065, 10.2789, 2.46736, 10.9152, 1.89161, 0.0375321, 3.43458, 8.34857, 7.46564, 2.097, 0.195299, 0.540919, 0.72093, 0.413726, 2.29797, 1.6818, 27.168, 5.8459, 0.102914, 0.409044, 0.102701, 0.300346, 0.141284, 27.5491, 0.442431, 3.80302, 0.145446, 51.5106, 15.4248, 122.934, 1.20628, 13.0523, 1.97563, 0.00206237, 2.20225, 4.93938, 0.869715, 0.561299, 22.092, 5.22007, 0.322618, 2.67244, 4.27982, 107.43, 0.276573, 1.73868, 0.00390388, 0.664034, 0.0562146, 13.6095, 0.10656, 0.0109476, 1.05293, 1.12395, 48.5172, 6.15675, 0.85664, 0.0766935, 6.81899, 364.009, 32.4521]

print(mean(a))
print(median(a))
print(stdev(a))
quartile(a)
plt.boxplot(a)
plt.show()


# %%
from matplotlib.ticker import FormatStrFormatter
fig, ax = plt.subplots()
x = [10 ** (i * 0.1) for i in range(1, 21)]
y = [i for i in range(1, 21)]
ax.loglog(x, y, 'o-', label='test')
ax.xaxis.set_major_formatter(FormatStrFormatter('%g'))
ax.yaxis.set_major_formatter(FormatStrFormatter('%g'))
ax.grid()
ax.legend()
plt.show()


# %%
